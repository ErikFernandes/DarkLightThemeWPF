<ResourceDictionary x:Name="ButtonStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DefaultStyles;component/Styles/ControlsColor/ControlsSourceLight.xaml" />
    </ResourceDictionary.MergedDictionaries>

    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--#region StandardButton-->

    <Style x:Key="StandardButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource StandardButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource StandardButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource StandardButton.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="2.0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5.0"
                            SnapsToDevicePixels="true">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2"
                                BlurRadius="4"
                                Color="Black" 
                                Opacity="0.5"/>
                        </Border.Effect>
                        <ContentPresenter x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource StandardButton.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource StandardButton.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource StandardButton.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource StandardButton.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource StandardButton.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource StandardButton.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource StandardButton.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->


    <!--#region LightDarkButton-->

    <Style x:Key="LightDarkButton" TargetType="{x:Type Button}">
        <Style.Resources>
            <ResourceDictionary>
                <SolidColorBrush x:Key="TransparentValue" Color="Transparent" />
            </ResourceDictionary>
        </Style.Resources>

        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource TransparentValue}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentValue}" />
        <Setter Property="Foreground" Value="{StaticResource TransparentValue}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Content" Value="{DynamicResource LightDarkButton.Image}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TransparentValue}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TransparentValue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TransparentValue}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TransparentValue}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TransparentValue}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TransparentValue}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource TransparentValue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->


</ResourceDictionary>